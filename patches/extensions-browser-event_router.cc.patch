diff --git a/extensions/browser/event_router.cc b/extensions/browser/event_router.cc
index 8f6d7c545a10fd95d6b910170bf0bfcfe8bfc736..c30e1796499cea3bf2b6166840557d3f688d7885 100644
--- a/extensions/browser/event_router.cc
+++ b/extensions/browser/event_router.cc
@@ -1030,18 +1030,30 @@ void EventRouter::DispatchEventToProcess(
   Feature::Context target_context =
       process_map->GetMostLikelyContextType(extension, process->GetID(), url);
 
-  // We shouldn't be dispatching an event to a webpage, since all such events
-  // (e.g.  messaging) don't go through EventRouter.
-  DCHECK_NE(Feature::WEB_PAGE_CONTEXT, target_context)
-      << "Trying to dispatch event " << event.event_name << " to a webpage,"
-      << " but this shouldn't be possible";
-
   Feature::Availability availability =
       ExtensionAPI::GetSharedInstance()->IsAvailable(
           event.event_name, extension, target_context, listener_url,
           CheckAliasStatus::ALLOWED,
           util::GetBrowserContextId(browser_context_));
-  if (!availability.is_available()) {
+  bool feature_available_to_context = availability.is_available();
+  if (target_context == Feature::WEB_PAGE_CONTEXT) {
+    // |url| can only be null for service workers, so should never be null here.
+    CHECK(url);
+    bool is_new_webstore_origin =
+        url::Origin::Create(extension_urls::GetNewWebstoreLaunchURL())
+            .IsSameOriginWith(*url);
+    const Feature* feature =
+        ExtensionAPI::GetSharedInstance()->GetFeatureDependency(
+            event.event_name);
+    bool feature_available_to_web_page_context =
+        feature_available_to_context &&
+        feature->RequiresDelegatedAvailabilityCheck();
+
+    CHECK(feature_available_to_web_page_context || is_new_webstore_origin)
+        << "Trying to dispatch event " << event.event_name << " to a webpage,"
+        << " but this shouldn't be possible";
+  }
+  if (!feature_available_to_context) {
     // TODO(crbug.com/1412151): Ideally it shouldn't be possible to reach here,
     // because access is checked on registration. However, we don't always
     // refresh the list of events an extension has registered when other factors
