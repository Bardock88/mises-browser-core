diff --git a/content/browser/browser_interface_binders.cc b/content/browser/browser_interface_binders.cc
index b18a8c841ab3d5ff66973d8cc090123f52f0b4de..f91d14bd251860105c23fac8139bf57b3115320c 100644
--- a/content/browser/browser_interface_binders.cc
+++ b/content/browser/browser_interface_binders.cc
@@ -255,6 +255,10 @@
 #include "components/viz/host/gpu_client.h"
 #endif
 
+#if BUILDFLAG(IS_ANDROID)
+#include "third_party/blink/public/mojom/hid/hid.mojom.h"
+#endif
+
 namespace blink {
 class StorageKey;
 }  // namespace blink
@@ -1092,6 +1096,8 @@ void PopulateFrameBinders(RenderFrameHostImpl* host, mojo::BinderMap* map) {
     map->Add<device::mojom::NFC>(base::BindRepeating(
         &RenderFrameHostImpl::BindNFCReceiver, base::Unretained(host)));
   }
+    map->Add<blink::mojom::HidService>(base::BindRepeating(
+        &RenderFrameHostImpl::GetHidService, base::Unretained(host)));
 #else
   map->Add<blink::mojom::HidService>(base::BindRepeating(
       &RenderFrameHostImpl::GetHidService, base::Unretained(host)));
@@ -1591,7 +1597,7 @@ void PopulateServiceWorkerBinders(ServiceWorkerHost* host,
       &ServiceWorkerHost::CreateBlobUrlStoreProvider, base::Unretained(host)));
   map->Add<blink::mojom::ReportingServiceProxy>(base::BindRepeating(
       &CreateReportingServiceProxyForServiceWorker, base::Unretained(host)));
-#if !BUILDFLAG(IS_ANDROID)
+#if !BUILDFLAG(IS_ANDROID) || true
   map->Add<blink::mojom::HidService>(base::BindRepeating(
       &ServiceWorkerHost::BindHidService, base::Unretained(host)));
 #endif
