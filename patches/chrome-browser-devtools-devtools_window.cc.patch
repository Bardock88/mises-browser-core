diff --git a/chrome/browser/devtools/devtools_window.cc b/chrome/browser/devtools/devtools_window.cc
index 9b388234f3dfe9d17bbd3ca85bee270c4601fce7..51da99898acece299eec1769142b54a371aaf31b 100644
--- a/chrome/browser/devtools/devtools_window.cc
+++ b/chrome/browser/devtools/devtools_window.cc
@@ -1613,6 +1613,7 @@ void DevToolsWindow::SetIsDocked(bool dock_requested) {
     return;
 
   if (dock_requested && !was_docked && browser_) {
+#if !BUILDFLAG(IS_ANDROID)
     // Detach window from the external devtools browser. It will lead to
     // the browser object's close and delete. Remove observer first.
     TabStripModel* tab_strip_model = browser_->tab_strip_model();
@@ -1633,6 +1634,9 @@ void DevToolsWindow::SetIsDocked(bool dock_requested) {
         tabs::TabModel::DestroyAndTakeWebContents(std::move(tab_model));
     owned_main_web_contents_ =
         std::make_unique<OwnedMainWebContents>(std::move(web_contents));
+#else
+    browser_ = nullptr;
+#endif
   } else if (!dock_requested && was_docked) {
     UpdateBrowserWindow();
   }
@@ -1855,10 +1859,15 @@ void DevToolsWindow::CreateDevToolsBrowser() {
   }
   browser_ =
       Browser::Create(Browser::CreateParams::CreateForDevTools(profile_));
+#if !BUILDFLAG(IS_ANDROID)
   browser_->tab_strip_model()->AddWebContents(
       OwnedMainWebContents::TakeWebContents(
           std::move(owned_main_web_contents_)),
       -1, ui::PAGE_TRANSITION_AUTO_TOPLEVEL, AddTabTypes::ADD_ACTIVE);
+#else
+  WebContents* web_contents = OwnedMainWebContents::TakeWebContents(std::move(owned_main_web_contents_)).release();
+  CreateTabAndroid(web_contents);
+#endif  
   OverrideAndSyncDevToolsRendererPrefs();
 }
 
