diff --git a/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenuItemViewBinder.java b/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenuItemViewBinder.java
index 4ea61c86b97ad19432c1642d5a130a479b396331..0dc784fb7585758faadef01665b7743855963d85 100644
--- a/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenuItemViewBinder.java
+++ b/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenuItemViewBinder.java
@@ -27,6 +27,10 @@ import org.chromium.ui.modelutil.PropertyModel;
 import org.chromium.ui.widget.ChromeImageButton;
 import org.chromium.ui.widget.ChromeImageView;
 
+import android.graphics.Color;
+import android.graphics.PorterDuff;
+import android.widget.ImageView;
+
 /**
  * The binder to bind the app menu  {@link PropertyModel} with the view.
  */
@@ -62,6 +66,14 @@ class AppMenuItemViewBinder {
             imageView.setImageDrawable(icon);
             imageView.setVisibility(icon == null ? View.GONE : View.VISIBLE);
 
+            CharSequence titleCondensed = model.get(AppMenuItemProperties.TITLE_CONDENSED);
+            if (titleCondensed != null && titleCondensed.toString().contains("Extension: ")) {
+                imageView.setColorFilter(Color.BLACK, PorterDuff.Mode.DST);
+                imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);
+            } else {
+                imageView.setColorFilter(null);
+            }
+
             // tint the icon
             @ColorRes
             int colorResId = model.get(AppMenuItemProperties.ICON_COLOR_RES);
@@ -69,6 +81,11 @@ class AppMenuItemViewBinder {
                 // If there is no color assigned to the icon, use the default color.
                 colorResId = R.color.default_icon_color_secondary_tint_list;
             }
+
+            if (titleCondensed != null && titleCondensed.toString().contains("Extension (inactive): ")) {
+                colorResId = R.color.default_text_color_disabled_list;
+            }
+
             ImageViewCompat.setImageTintList(imageView,
                     AppCompatResources.getColorStateList(imageView.getContext(), colorResId));
         } else if (key == AppMenuItemProperties.CLICK_HANDLER) {
