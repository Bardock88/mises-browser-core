diff --git a/chrome/browser/extensions/api/identity/web_auth_flow.cc b/chrome/browser/extensions/api/identity/web_auth_flow.cc
index affc352d603c0fd3dce302d4773d6237ba7c2ad1..2bb0c4f4de9c38942fa009e0157e90fd3fa70e42 100644
--- a/chrome/browser/extensions/api/identity/web_auth_flow.cc
+++ b/chrome/browser/extensions/api/identity/web_auth_flow.cc
@@ -30,6 +30,11 @@
 #include "url/gurl.h"
 #include "url/url_constants.h"
 
+#if BUILDFLAG(IS_ANDROID)
+#include "chrome/browser/ui/scoped_tabbed_browser_displayer.h"
+#include "chrome/browser/ui/browser_navigator.h"
+#endif
+
 using content::WebContents;
 using content::WebContentsObserver;
 
@@ -120,7 +125,13 @@ bool WebAuthFlow::DisplayAuthPageInPopupWindow() {
       Browser::CreationStatus::kOk) {
     return false;
   }
-
+#if BUILDFLAG(IS_ANDROID)
+  chrome::ScopedTabbedBrowserDisplayer browser_displayer(profile_);
+  NavigateParams params(browser_displayer.browser(),
+                        std::move(web_contents_));
+  params.user_gesture = user_gesture_;
+  Navigate(&params);
+#else
   Browser::CreateParams browser_params(Browser::TYPE_POPUP, profile_,
                                        user_gesture_);
   browser_params.omit_from_session_restore = true;
@@ -133,6 +144,7 @@ bool WebAuthFlow::DisplayAuthPageInPopupWindow() {
       AddTabTypes::ADD_ACTIVE);
 
   browser->window()->Show();
+#endif
   return true;
 }
 
