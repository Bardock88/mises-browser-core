diff --git a/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenuHandlerImpl.java b/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenuHandlerImpl.java
index 0e672f994305c10f575bf11b35a274fe70a00745..4a1e1bcf48e4b4fa700a09b6d46eddcf45f0edbc 100644
--- a/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenuHandlerImpl.java
+++ b/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenuHandlerImpl.java
@@ -38,6 +38,8 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
+import org.chromium.base.Log;
+
 /**
  * Object responsible for handling the creation, showing, hiding of the AppMenu and notifying the
  * AppMenuObservers about these actions.
@@ -351,7 +353,24 @@ class AppMenuHandlerImpl
             mTestOptionsItemSelectedListener.onResult(itemId);
             return;
         }
-
+        String lastItemTitle = "";
+        String lastVisibleItemTitle = "";
+        int menuSize = mModelList.size();
+        for (int i = 0; i < menuSize; i++) {
+            if (mModelList.get(i).model.get(AppMenuItemProperties.MENU_ITEM_ID) == itemId) {
+                Log.d("Mises", "Comparing Menu Size of Size: " + menuSize + " and ID: " + mModelList.get(i).model.get(AppMenuItemProperties.MENU_ITEM_ID) + " and itemId: " + itemId);
+                CharSequence titleCondensed = mModelList.get(i).model.get(AppMenuItemProperties.TITLE_CONDENSED);
+                if (titleCondensed != null) {
+                    Log.d("Mises", "Got titleCondensed: " + titleCondensed);
+                    lastItemTitle = titleCondensed.toString();
+                    CharSequence title = mModelList.get(i).model.get(AppMenuItemProperties.TITLE);
+                    lastVisibleItemTitle = title.toString();
+                }
+                break;
+            }
+        }
+        mAppMenuDelegate.setLastItemTitle(lastItemTitle);
+        mAppMenuDelegate.setLastVisibleItemTitle(lastVisibleItemTitle);
         mAppMenuDelegate.onOptionsItemSelected(itemId, mDelegate.getBundleForMenuItem(itemId));
     }
 
