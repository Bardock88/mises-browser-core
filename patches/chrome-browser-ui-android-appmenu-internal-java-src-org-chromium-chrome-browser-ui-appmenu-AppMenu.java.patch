diff --git a/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenu.java b/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenu.java
index 3215767dde35a6f7443df41267780e7d7bc0d856..b5344f02d06b8e5894d9cf136c752df857c6392f 100644
--- a/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenu.java
+++ b/chrome/browser/ui/android/appmenu/internal/java/src/org/chromium/chrome/browser/ui/appmenu/AppMenu.java
@@ -32,6 +32,14 @@ import android.widget.ListView;
 import android.widget.PopupWindow;
 
 import androidx.annotation.ColorInt;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View.OnTouchListener;
+import android.util.Base64;
+import android.util.Base64InputStream;
+import android.widget.AdapterView;
+
 import androidx.annotation.IdRes;
 import androidx.annotation.Nullable;
 import androidx.annotation.VisibleForTesting;
@@ -55,6 +63,27 @@ import org.chromium.ui.widget.Toast;
 import java.util.ArrayList;
 import java.util.List;
 
+import android.util.Log;
+import android.graphics.Bitmap;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.BitmapFactory;
+import android.graphics.Color;
+
+import android.app.Activity;
+import java.util.Hashtable;
+
+import org.chromium.chrome.browser.app.ChromeActivity;
+
+import org.chromium.chrome.browser.tab.Tab;
+import org.chromium.ui.mojom.WindowOpenDisposition;
+import org.chromium.base.ContextUtils;
+import org.chromium.chrome.browser.profiles.Profile;
+import org.chromium.base.ThreadUtils;
+import org.chromium.content_public.browser.WebContents;
+import android.os.Build;
+import org.jni_zero.CalledByNative;
+import org.jni_zero.NativeMethods;
+
 /**
  * Shows a popup of menuitems anchored to a host view. When a item is selected we call
  * AppMenuHandlerImpl.AppMenuDelegate.onOptionsItemSelected with the appropriate MenuItem.
@@ -228,6 +257,8 @@ class AppMenu implements OnItemClickListener, OnKeyListener, AppMenuClickHandler
                     isMenuIconAtStart ? R.style.StartIconMenuAnim : R.style.EndIconMenuAnim);
         }
 
+        if (ContextUtils.getAppSharedPreferences().getBoolean("enable_bottom_toolbar", false)) mPopup.setAnimationStyle(R.style.EndIconMenuAnimBottom);
+
         // Turn off window animations for low end devices.
         if (SysUtils.isLowEndDevice()) mPopup.setAnimationStyle(0);
 
@@ -321,11 +352,15 @@ class AppMenu implements OnItemClickListener, OnKeyListener, AppMenuClickHandler
         mPopup.setContentView(contentView);
 
         try {
+          if (ContextUtils.getAppSharedPreferences().getBoolean("enable_bottom_toolbar", false) && Build.VERSION.SDK_INT == Build.VERSION_CODES.N) {
+              mPopup.showAsDropDown(anchorView.getRootView(), popupPosition[0], popupPosition[1]);
+          } else {
             mPopup.showAtLocation(
                     anchorView.getRootView(),
                     Gravity.NO_GRAVITY,
                     popupPosition[0],
                     popupPosition[1]);
+          }
         } catch (WindowManager.BadTokenException e) {
             // Intentionally ignore BadTokenException. This can happen in a real edge case where
             // parent.getWindowToken is not valid. See http://crbug.com/826052 &
@@ -348,7 +383,8 @@ class AppMenu implements OnItemClickListener, OnKeyListener, AppMenuClickHandler
         }
 
         // Don't animate the menu items for low end devices.
-        if (!SysUtils.isLowEndDevice()) {
+        boolean mises_enfroce = false;
+	     if (!SysUtils.isLowEndDevice() && mises_enfroce) {
             mListView.addOnLayoutChangeListener(
                     new View.OnLayoutChangeListener() {
                         @Override
@@ -605,6 +641,12 @@ class AppMenu implements OnItemClickListener, OnKeyListener, AppMenuClickHandler
                 calculateHeightForItems(
                         menuItemIds, heightList, groupDividerResourceId, availableScreenSpace);
         menuHeight += footerHeight + headerHeight + padding.top + padding.bottom;
+        if (ContextUtils.getAppSharedPreferences().getBoolean("enable_bottom_toolbar", false) && menuItemIds.size() >= 7) {
+            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N_MR1)
+              menuHeight = (int) (menuHeight / 1.55);
+            else
+              menuHeight = (int) (menuHeight / 1.45);
+        }
         mPopup.setHeight(menuHeight);
     }
 
