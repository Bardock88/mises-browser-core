diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabModelImpl.java b/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabModelImpl.java
index 9ea8672af6f78c5d410c514ee7893fc368ca67a8..f4b32c33cd8968d393a5c1b8fa31a043089004c7 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabModelImpl.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/TabModelImpl.java
@@ -848,14 +848,14 @@ public class TabModelImpl extends TabModelJniBridge {
     /** Used to restore tabs from native. */
     @Override
     protected boolean createTabWithWebContents(
-            Tab parent, Profile profile, WebContents webContents, boolean select) {
+            Tab parent, Profile profile, WebContents webContents, boolean select, @TabLaunchType int type) {
         return getTabCreator(profile.isOffTheRecord())
                 .createTabWithWebContents(
                         parent,
                         webContents,
                         select
                                 ? TabLaunchType.FROM_RECENT_TABS_FOREGROUND
-                                : TabLaunchType.FROM_RECENT_TABS);
+                                : type);
     }
 
     @Override
@@ -907,6 +907,24 @@ public class TabModelImpl extends TabModelJniBridge {
         return mIndex;
     }
 
+    @Override
+    public int getLastNonExtensionActiveIndex() {
+        int result = mIndex;
+        Tab currentTab = getTabAt(mIndex);
+        // We get the adjacent tab in case we are currently on a chrome-extension page
+        if (currentTab != null && currentTab.getUrl() != null && (currentTab.getUrl().getSpec().contains("chrome-extension://"))) {
+          Tab parentTab = findTabInAllTabModels(currentTab.getParentId());
+            if (parentTab != null) {
+                result =  indexOf(parentTab);
+            } else {
+                    result = mIndex - 1;
+            }	
+	    }
+        if (result < 0)
+          return 0;
+        return result;    
+    }
+
     @Override
     protected boolean isSessionRestoreInProgress() {
         return mModelDelegate.isSessionRestoreInProgress();
