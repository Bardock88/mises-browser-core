diff --git a/content/public/android/java/src/org/chromium/content/browser/selection/SelectionPopupControllerImpl.java b/content/public/android/java/src/org/chromium/content/browser/selection/SelectionPopupControllerImpl.java
index e2d6f9732c9efeab8cd473ba80fec89b2141e08e..6e58366de80f6d8caf964c3942b0626b3b243f3b 100644
--- a/content/public/android/java/src/org/chromium/content/browser/selection/SelectionPopupControllerImpl.java
+++ b/content/public/android/java/src/org/chromium/content/browser/selection/SelectionPopupControllerImpl.java
@@ -69,6 +69,8 @@ import org.chromium.ui.touch_selection.TouchSelectionDraggableType;
 
 import java.util.List;
 
+import org.chromium.base.ContextUtils;
+
 /**
  * Implementation of the interface {@link SelectionPopupController}.
  */
@@ -981,6 +983,10 @@ public class SelectionPopupControllerImpl extends ActionModeCallbackHelper
 
         // The selection coordinates are relative to the content viewport, but we need
         // coordinates relative to the containing View.
+        if (ContextUtils.getAppSharedPreferences().getBoolean("enable_bottom_toolbar", false))
+        viewSelectionRect.offset(
+                0, (int) mWebContents.getRenderCoordinates().getContentOffsetYPix() - (int) (60 * deviceScale));
+        else
         viewSelectionRect.offset(
                 0, (int) mWebContents.getRenderCoordinates().getContentOffsetYPix());
         return viewSelectionRect;
@@ -1393,6 +1399,8 @@ public class SelectionPopupControllerImpl extends ActionModeCallbackHelper
             // The selection coordinates are relative to the content viewport, but we need
             // coordinates relative to the containing View, so adding getContentOffsetYPix().
             y = y * deviceScale + mWebContents.getRenderCoordinates().getContentOffsetYPix();
+            if (ContextUtils.getAppSharedPreferences().getBoolean("enable_bottom_toolbar", false))
+              y = y - (int) (60 * deviceScale);
             mHandleObserver.handleDragStartedOrMoved(x, y);
         }
     }
