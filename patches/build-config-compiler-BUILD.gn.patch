diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 765345a16d112673ebdd0af4cd91cdccd4af57f0..a279eb78d03195dd40997ffc04fd7fb20da939f8 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -868,7 +868,7 @@ config("compiler") {
   # Pass flag to LLD so Android builds can allow debuggerd to properly symbolize
   # stack crashes (http://crbug.com/919499).
   if (use_lld && is_android) {
-    ldflags += [ "-Wl,--no-rosegment" ]
+    ldflags += [ "-Wl,--no-rosegment", "-Wl,--error-limit=0" ]
   }
 
   # TODO(crbug.com/40242425): Cleanup undefined symbol errors caught by
@@ -1186,6 +1186,10 @@ config("compiler_cpu_abi") {
   if (is_chromeos) {
     configs += [ "//build/config/chromeos:compiler_cpu_abi" ]
   }
+  if (is_apple && current_cpu == "arm64") {
+    cflags += [ "-fno-global-isel" , "-fobjc-legacy-dispatch", "-fobjc-abi-version=2"]
+    ldflags += [ "-fno-global-isel", "-Wl,-ObjC", "-fobjc-legacy-dispatch", "-fobjc-abi-version=2"]
+  }
 
   if ((is_posix && !is_apple) || is_fuchsia) {
     # CPU architecture. We may or may not be doing a cross compile now, so for
@@ -3078,6 +3082,11 @@ if (is_apple) {
     cflags_objc = common_flags
     cflags_objcc = common_flags
   }
+  config("enable_legacy_dispatch") {
+    common_flags = [ "-fobjc-legacy-dispatch", "-fobjc-abi-version=2" ]
+    cflags_objc = common_flags
+    cflags_objcc = common_flags
+  }
 }
 
 if (is_android) {
