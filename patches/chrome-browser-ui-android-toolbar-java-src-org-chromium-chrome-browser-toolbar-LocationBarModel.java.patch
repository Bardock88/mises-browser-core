diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
index 1c617f64daa854f7ef2266179f9b9527955e62fd..a8593e53f23b8fbe03c73e8853df16e5440867f4 100644
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
@@ -372,6 +372,10 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
                 return buildUrlBarData(originalUrl, isOfflinePage);
             }
 
+            if (url.startsWith("devtools://")) {
+                return buildUrlBarData(gurl, false, mTab.getTitle(), "");
+            }
+
             if (isOfflinePage) {
                 GURL originalUrl = mTab.getOriginalUrl();
                 formattedUrl = UrlUtilities.stripScheme(mUrlFormatter.format(originalUrl));
@@ -578,7 +582,7 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
 
     @Override
     public int getPageClassification(boolean isFocusedFromFakebox, boolean isPrefetch) {
-        if (mNativeLocationBarModelAndroid == 0) return PageClassification.INVALID_SPEC_VALUE;
+        if (mNativeLocationBarModelAndroid == 0) return PageClassification.NTP_VALUE;
 
         return LocationBarModelJni.get()
                 .getPageClassification(
@@ -611,6 +615,17 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
             return ConnectionSecurityLevel.NONE;
         }
 
+        final String url = tab.getUrl().getSpec();
+        boolean mises_force_safe = !TextUtils.isEmpty(url) && (
+            url.startsWith("chrome-extension") || 
+            url.startsWith("chrome") || 
+            url.startsWith("devtools") || 
+            url.startsWith("mises") || 
+            url.startsWith("mises-extension"));
+        if (mises_force_safe) {
+            return ConnectionSecurityLevel.NONE;
+        }
+
         @Nullable GURL publisherUrl = TrustedCdn.getPublisherUrl(tab);
 
         if (publisherUrl != null) {
@@ -658,6 +673,10 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
             return R.drawable.omnibox_info;
         }
 
+        if (mNativeLocationBarModelAndroid == 0) {  
+             return R.drawable.omnibox_info;
+        }
+
         // Return early if native initialization hasn't been done yet.
         if ((securityLevel == ConnectionSecurityLevel.NONE
                         || securityLevel == ConnectionSecurityLevel.WARNING)
@@ -671,6 +690,15 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
                                         .shouldShowSearchEngineLogo())
                         || mNtpDelegate.isCurrentlyVisible();
 
+        String currentUrl = getCurrentUrl();
+        if (currentUrl != null && 
+            (currentUrl.startsWith("chrome://") ||
+            currentUrl.startsWith("mises://") ||
+            currentUrl.startsWith("chrome-search://") ||
+            currentUrl.startsWith("mises-search://") )
+        ){
+            skipIconForNeutralState = true;
+        }
         return SecurityStatusIcon.getSecurityIconResource(
                 securityLevel,
                 isSmallDevice,
