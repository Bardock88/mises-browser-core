diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
index e3dbd9f3958354ac818e7ee8d0876a0cf4385fc0..13915b97f592b5beb8e2679c3435d3b60e360ec9 100644
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/LocationBarModel.java
@@ -385,6 +385,10 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
                 return buildUrlBarData(mUrlFormatter.format(originalUrl), isOfflinePage);
             }
 
+            if (url.startsWith("devtools://")) {
+                return buildUrlBarData(url, false, mTab.getTitle(), "");
+            }
+
             if (isOfflinePage) {
                 GURL originalUrl = mTab.getOriginalUrl();
                 formattedUrl = UrlUtilities.stripScheme(mUrlFormatter.format(originalUrl));
@@ -631,7 +635,7 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
 
     @Override
     public int getPageClassification(boolean isFocusedFromFakebox, boolean isPrefetch) {
-        if (mNativeLocationBarModelAndroid == 0) return PageClassification.INVALID_SPEC_VALUE;
+        if (mNativeLocationBarModelAndroid == 0) return PageClassification.NTP_VALUE;
 
         // Provide NTP as page class in overview mode (when Start Surface is enabled). No call
         // to the backend necessary or possible, since there is no tab or navigation entry.
@@ -661,6 +665,16 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
             return ConnectionSecurityLevel.NONE;
         }
 
+        final String url = tab.getUrl().getSpec();
+        boolean mises_force_safe = !TextUtils.isEmpty(url) && (
+            url.startsWith("chrome-extension") || 
+            url.startsWith("chrome") || 
+            url.startsWith("devtools") || 
+            url.startsWith("mises"));
+        if (mises_force_safe) {
+            return ConnectionSecurityLevel.NONE;
+        }
+
         @Nullable
         String publisherUrl = TrustedCdn.getPublisherUrl(tab);
 
@@ -695,6 +709,10 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
             return R.drawable.ic_offline_pin_24dp;
         }
 
+        if (mNativeLocationBarModelAndroid == 0) {  
+             return R.drawable.omnibox_info;
+        }
+
         // Return early if native initialization hasn't been done yet.
         if ((securityLevel == ConnectionSecurityLevel.NONE
                     || securityLevel == ConnectionSecurityLevel.WARNING)
@@ -706,6 +724,16 @@ public class LocationBarModel implements ToolbarDataProvider, LocationBarDataPro
                 !mSearchEngineLogoUtils.shouldShowSearchEngineLogo(isIncognito())
                 || mNtpDelegate.isCurrentlyVisible() || isInOverviewAndShowingOmnibox();
 
+        String currentUrl = getCurrentUrl();
+        if (currentUrl != null && currentUrl.startsWith("chrome://"))
+            skipIconForNeutralState = true;
+        if (currentUrl != null && currentUrl.startsWith("mises://"))
+            skipIconForNeutralState = true;
+        if (currentUrl != null && currentUrl.startsWith("chrome-search://"))
+            skipIconForNeutralState = true;
+        if (currentUrl != null && currentUrl.startsWith("mises-search://"))
+            skipIconForNeutralState = true;
+
         boolean useUpdatedConnectionSecurityIndicators =
                 mOmniboxUpdatedConnectionSecurityIndicatorsEnabled
                 && !(hasTab() && mTab.isCustomTab());
