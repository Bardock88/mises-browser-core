diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/ChromeTabCreator.java b/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/ChromeTabCreator.java
index 96da3461e3c99c6aa4c304f9e5b6a9436c58a386..8ea4e89f7e1a257ba0dfd66c546eee1853fb62e0 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/ChromeTabCreator.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tabmodel/ChromeTabCreator.java
@@ -47,6 +47,9 @@ import org.chromium.ui.base.PageTransition;
 import org.chromium.ui.base.WindowAndroid;
 import org.chromium.url.GURL;
 
+import android.animation.ValueAnimator;
+import org.chromium.chrome.browser.tab.TabSelectionType;
+
 /** This class creates various kinds of new tabs and adds them to the right {@link TabModel}. */
 public class ChromeTabCreator extends TabCreator {
     private final Activity mActivity;
@@ -260,6 +263,7 @@ public class ChromeTabCreator extends TabCreator {
             Tab parent,
             int position,
             Intent intent) {
+        setDurationScale(0.0f);
         // Measure tab creation duration for different launch types to understand tab creation
         // performance.
         try (TraceEvent te = TraceEvent.scoped("ChromeTabCreator.createNewTab");
@@ -400,6 +404,7 @@ public class ChromeTabCreator extends TabCreator {
                 creationState = TabCreationState.LIVE_IN_BACKGROUND;
             }
             mTabModel.addTab(tab, position, type, creationState);
+            setDurationScale(0.6f);
             return tab;
         }
     }
@@ -412,6 +417,7 @@ public class ChromeTabCreator extends TabCreator {
         // The parent tab was already closed.  Do not open child tabs.
         int parentId = parent != null ? parent.getId() : Tab.INVALID_TAB_ID;
         if (mTabModel.isClosurePending(parentId)) return false;
+        setDurationScale(0.0f);
 
         // Measure tab creation duration for different launch types to understand tab creation
         // performance using an existing WebContents.
@@ -461,6 +467,7 @@ public class ChromeTabCreator extends TabCreator {
                                 : TabCreationState.LIVE_IN_BACKGROUND;
             }
             mTabModel.addTab(tab, position, type, creationState);
+            setDurationScale(0.6f);
             return true;
         }
     }
@@ -684,4 +691,29 @@ public class ChromeTabCreator extends TabCreator {
     public TabDelegateFactory createDefaultTabDelegateFactory() {
         return mTabDelegateFactorySupplier != null ? mTabDelegateFactorySupplier.get() : null;
     }
+
+    private void setDurationScale(float scale) {
+        try {
+            ValueAnimator.class.getMethod("setDurationScale", float.class).invoke(null, scale);
+        } catch (Throwable t) {
+
+        }
+    }
+    @Override
+    public void openSinglePage(String url) {
+        try {
+            TraceEvent.begin("TabCreator.openSinglePage");
+
+            for (int i=0; i<mTabModel.getCount(); i++) {
+                String pageurl = mTabModel.getTabAt(i).getUrl().getSpec();
+                if (pageurl.indexOf(url) != -1) {
+                    mTabModel.setIndex(i, TabSelectionType.FROM_USER, false);
+                    return;
+                }
+            }
+            launchUrl(url, TabLaunchType.FROM_CHROME_UI);
+        } finally {
+            TraceEvent.end("TabCreator.openSinglePage");
+        }
+    }
 }
