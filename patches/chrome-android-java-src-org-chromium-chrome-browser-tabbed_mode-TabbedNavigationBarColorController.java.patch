diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedNavigationBarColorController.java b/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedNavigationBarColorController.java
index 84356e537d84b4d0e598f71ca49acd634d591d9b..254b6f3c604fbd1fe011d8ac9b1bcbdb70a3e39d 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedNavigationBarColorController.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedNavigationBarColorController.java
@@ -35,6 +35,11 @@ import org.chromium.components.browser_ui.styles.SemanticColorUtils;
 import org.chromium.ui.UiUtils;
 import org.chromium.ui.util.ColorUtils;
 
+import org.chromium.base.ContextUtils;
+import android.graphics.Color;
+
+import org.chromium.chrome.browser.night_mode.GlobalNightModeStateProviderHolder;
+
 /**
  * Controls the bottom system navigation bar color for the provided {@link Window}.
  */
@@ -166,8 +171,9 @@ class TabbedNavigationBarColorController {
     @SuppressLint("NewApi")
     private void updateNavigationBarColor() {
         boolean forceDarkNavigation;
-        if (DeviceClassManager.enableAccessibilityLayout(mRootView.getContext())
-                || TabUiFeatureUtilities.isGridTabSwitcherEnabled(mRootView.getContext())) {
+        boolean mises_enforce = true;
+	if (DeviceClassManager.enableAccessibilityLayout(mRootView.getContext())
+                || TabUiFeatureUtilities.isGridTabSwitcherEnabled(mRootView.getContext()) || mises_enforce) {
             forceDarkNavigation = mTabModelSelector.isIncognitoSelected();
         } else {
             boolean overviewVisible = mLayoutManager != null
@@ -179,6 +185,11 @@ class TabbedNavigationBarColorController {
         forceDarkNavigation &= !UiUtils.isSystemUiThemingDisabled();
         forceDarkNavigation |= mIsInFullscreen;
 
+        if (ContextUtils.getAppSharedPreferences().getBoolean("darken_websites_enabled", false) || ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 2 || (ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 0 && GlobalNightModeStateProviderHolder.getInstance().isInNightMode()))
+            forceDarkNavigation = true;
+
+        if (mForceDarkNavigationBarColor == forceDarkNavigation) return;
+
         mForceDarkNavigationBarColor = forceDarkNavigation;
         final @ColorInt int navigationBarColor =
                 getNavigationBarColor(mForceDarkNavigationBarColor);
@@ -199,6 +210,8 @@ class TabbedNavigationBarColorController {
             mWindow.setNavigationBarDividerColor(
                     getNavigationBarDividerColor(mForceDarkNavigationBarColor));
         }
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P && (ContextUtils.getAppSharedPreferences().getBoolean("darken_websites_enabled", false) || ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 2 || (ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 0 && GlobalNightModeStateProviderHolder.getInstance().isInNightMode())))
+            mWindow.setNavigationBarDividerColor(Color.parseColor("#FF000000"));
     }
 
     /**
@@ -207,12 +220,19 @@ class TabbedNavigationBarColorController {
      */
     public void setNavigationBarScrimFraction(float fraction) {
         mNavigationBarScrimFraction = fraction;
+        // https://forums.oneplus.com/threads/cannot-set-navigation-bar-color-to-pure-black-ff000000-via-values-xml.908719/
+        // navigation bar cannot be set to pure black to protect the display
+        if (ContextUtils.getAppSharedPreferences().getBoolean("darken_websites_enabled", false) || ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 2 || (ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 0 && GlobalNightModeStateProviderHolder.getInstance().isInNightMode()))
+        mWindow.setNavigationBarColor(Color.parseColor("#FF000000"));
+        else
         mWindow.setNavigationBarColor(
                 applyCurrentScrimToColor(getNavigationBarColor(mForceDarkNavigationBarColor)));
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
             mWindow.setNavigationBarDividerColor(applyCurrentScrimToColor(
                     getNavigationBarDividerColor(mForceDarkNavigationBarColor)));
         }
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P && (ContextUtils.getAppSharedPreferences().getBoolean("darken_websites_enabled", false) || ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 2 || (ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 0 && GlobalNightModeStateProviderHolder.getInstance().isInNightMode())))
+            mWindow.setNavigationBarDividerColor(Color.parseColor("#FF000000"));
 
         // Adjust the color of navigation bar icons based on color state of the navigation bar.
         if (MathUtils.areFloatsEqual(1f, fraction)) {
@@ -223,12 +243,16 @@ class TabbedNavigationBarColorController {
     }
 
     private @ColorInt int getNavigationBarColor(boolean forceDarkNavigationBar) {
+        if (ContextUtils.getAppSharedPreferences().getBoolean("darken_websites_enabled", false) || ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 2 || (ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 0 && GlobalNightModeStateProviderHolder.getInstance().isInNightMode()))
+            return Color.parseColor("#FF000000");
         return forceDarkNavigationBar
                 ? mContext.getColor(R.color.toolbar_background_primary_dark)
                 : SemanticColorUtils.getBottomSystemNavColor(mWindow.getContext());
     }
 
     private @ColorInt int getNavigationBarDividerColor(boolean forceDarkNavigationBar) {
+        if (ContextUtils.getAppSharedPreferences().getBoolean("darken_websites_enabled", false) || ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 2 || (ContextUtils.getAppSharedPreferences().getInt("ui_theme_setting", 0) == 0 && GlobalNightModeStateProviderHolder.getInstance().isInNightMode()))
+            return Color.parseColor("#FF000000");
         return forceDarkNavigationBar
                 ? mContext.getColor(R.color.bottom_system_nav_divider_color_light)
                 : SemanticColorUtils.getBottomSystemNavDividerColor(mWindow.getContext());
