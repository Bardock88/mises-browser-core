diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePreferenceBridge.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePreferenceBridge.java
index 1b1f8b01fbcf0107f3702dd01a2d64079c2b3c78..75b03b4ba2e1c6bb61af14a4bb627493c9523427 100644
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePreferenceBridge.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePreferenceBridge.java
@@ -396,6 +396,10 @@ public class WebsitePreferenceBridge {
         WebsitePreferenceBridgeJni.get().setContentSettingCustomScope(browserContextHandle,
                 contentSettingType, primaryPattern, secondaryPattern, setting);
     }
+    public static void setPopupSettingForOrigin(BrowserContextHandle browserContextHandle, String origin, int contentSettingsType, boolean isIncognito) {
+        WebsitePreferenceBridgeJni.get().setPopupSettingForOrigin(browserContextHandle, origin, contentSettingsType, isIncognito);
+    }
+
 
     /**
      * Convert pattern to domain wildcard pattern. If fail to extract domain from the pattern,
@@ -485,5 +489,7 @@ public class WebsitePreferenceBridge {
         boolean getLocationAllowedByPolicy(BrowserContextHandle browserContextHandle);
         String toDomainWildcardPattern(String pattern);
         String toHostOnlyPattern(String pattern);
+        void setPopupSettingForOrigin(BrowserContextHandle browserContextHandle,
+            String origin, int value, boolean isIncognito);
     }
 }
