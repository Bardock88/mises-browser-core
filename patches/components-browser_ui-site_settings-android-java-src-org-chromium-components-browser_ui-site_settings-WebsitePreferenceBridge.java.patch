diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePreferenceBridge.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePreferenceBridge.java
index 811d3c26ece35fe7ada97bb8c01ca177eca561f8..650b9f2f4dadb124148cf54ed1cd7543bb5386ee 100644
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePreferenceBridge.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePreferenceBridge.java
@@ -363,6 +363,10 @@ public class WebsitePreferenceBridge {
         WebsitePreferenceBridgeJni.get().setContentSettingCustomScope(browserContextHandle,
                 contentSettingType, primaryPattern, secondaryPattern, setting);
     }
+    public static void setPopupSettingForOrigin(BrowserContextHandle browserContextHandle, String origin, int contentSettingsType, boolean isIncognito) {
+        WebsitePreferenceBridgeJni.get().setPopupSettingForOrigin(browserContextHandle, origin, contentSettingsType, isIncognito);
+    }
+
 
     /**
      * Convert pattern to domain wildcard pattern. If fail to extract domain from the pattern,
@@ -447,5 +451,7 @@ public class WebsitePreferenceBridge {
         boolean getLocationAllowedByPolicy(BrowserContextHandle browserContextHandle);
         String toDomainWildcardPattern(String pattern);
         String toHostOnlyPattern(String pattern);
+        void setPopupSettingForOrigin(BrowserContextHandle browserContextHandle,
+            String origin, int value, boolean isIncognito);
     }
 }
