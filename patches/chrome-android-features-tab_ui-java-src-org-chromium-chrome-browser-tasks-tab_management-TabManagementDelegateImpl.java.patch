diff --git a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabManagementDelegateImpl.java b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabManagementDelegateImpl.java
index fa55a5eba614f0068e00cab3989492fd7174216b..5a08198102ea629a6c786d2713184806ebbf38bf 100644
--- a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabManagementDelegateImpl.java
+++ b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/TabManagementDelegateImpl.java
@@ -42,6 +42,8 @@ import org.chromium.components.browser_ui.widget.scrim.ScrimCoordinator;
 import org.chromium.ui.modaldialog.ModalDialogManager;
 import org.chromium.ui.resources.dynamics.DynamicResourceLoader;
 
+import org.chromium.base.ContextUtils;
+
 /**
  * Impl class that will resolve components for tab management.
  */
@@ -75,14 +77,18 @@ public class TabManagementDelegateImpl implements TabManagementDelegate {
                     "Downloaded_Enabled");
         }
 
+        int mode = TabListCoordinator.TabListMode.GRID;
+        if (TabUiFeatureUtilities.isTabGroupsAndroidContinuationEnabled(activity)
+                                && SysUtils.isLowEndDevice())
+            mode = TabListCoordinator.TabListMode.LIST;
+        final String active_tabswitcher = ContextUtils.getAppSharedPreferences().getString("active_tabswitcher", "default");
+	if (active_tabswitcher.equals("default") || active_tabswitcher.equals("grid"))
+	    mode = TabListCoordinator.TabListMode.GRID;
         return new TabSwitcherCoordinator(activity, activityLifecycleDispatcher, tabModelSelector,
                 tabContentManager, browserControlsStateProvider, tabCreatorManager,
                 menuOrKeyboardActionController, containerView, shareDelegateSupplier,
                 multiWindowModeStateDispatcher, scrimCoordinator,
-                TabUiFeatureUtilities.isTabGroupsAndroidContinuationEnabled(activity)
-                                && SysUtils.isLowEndDevice()
-                        ? TabListCoordinator.TabListMode.LIST
-                        : TabListCoordinator.TabListMode.GRID,
+                mode,
                 rootView, dynamicResourceLoaderSupplier, snackbarManager, modalDialogManager);
     }
 
