diff --git a/chrome/browser/safe_browsing/cloud_content_scanning/file_analysis_request.h b/chrome/browser/safe_browsing/cloud_content_scanning/file_analysis_request.h
index 6a462922bb96ef8274bb777c75b131087fe2b8e9..9ffe4c372ac54a2ccffe2053a285045ca07fd8a9 100644
--- a/chrome/browser/safe_browsing/cloud_content_scanning/file_analysis_request.h
+++ b/chrome/browser/safe_browsing/cloud_content_scanning/file_analysis_request.h
@@ -10,8 +10,11 @@
 #include "chrome/browser/enterprise/connectors/common.h"
 #include "chrome/browser/safe_browsing/cloud_content_scanning/binary_upload_service.h"
 #include "chrome/common/safe_browsing/archive_analyzer_results.h"
+#include "components/safe_browsing/buildflags.h"
+#if BUILDFLAG(FULL_SAFE_BROWSING)
 #include "chrome/services/file_util/public/cpp/sandboxed_rar_analyzer.h"
 #include "chrome/services/file_util/public/cpp/sandboxed_zip_analyzer.h"
+#endif
 #include "components/enterprise/connectors/core/service_provider_config.h"
 #include "components/file_access/scoped_file_access.h"
 
@@ -84,11 +87,13 @@ class FileAnalysisRequest : public BinaryUploadService::Request {
   // GetRequestData call.
   bool delay_opening_file_;
 
+#if BUILDFLAG(FULL_SAFE_BROWSING)
   // Used to unpack and analyze archives in a sandbox.
   std::unique_ptr<SandboxedZipAnalyzer, base::OnTaskRunnerDeleter>
       zip_analyzer_{nullptr, base::OnTaskRunnerDeleter(nullptr)};
   std::unique_ptr<SandboxedRarAnalyzer, base::OnTaskRunnerDeleter>
       rar_analyzer_{nullptr, base::OnTaskRunnerDeleter(nullptr)};
+#endif
 
   std::unique_ptr<file_access::ScopedFileAccess> scoped_file_access_;
 
