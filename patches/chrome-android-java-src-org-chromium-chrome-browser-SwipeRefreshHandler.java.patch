diff --git a/chrome/android/java/src/org/chromium/chrome/browser/SwipeRefreshHandler.java b/chrome/android/java/src/org/chromium/chrome/browser/SwipeRefreshHandler.java
index 9fa5c30608e83de37d682a7045c30f4643c7b1ff..5a368da73c3ac3c664f53aa6efbab432603f636f 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/SwipeRefreshHandler.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/SwipeRefreshHandler.java
@@ -30,6 +30,8 @@ import org.chromium.ui.OverscrollAction;
 import org.chromium.ui.OverscrollRefreshHandler;
 import org.chromium.ui.base.WindowAndroid;
 
+import org.chromium.base.ContextUtils;
+
 /**
  * An overscroll handler implemented in terms a modified version of the Android
  * compat library's SwipeRefreshLayout effect.
@@ -222,6 +224,8 @@ public class SwipeRefreshHandler
         if (mSwipeType == OverscrollAction.PULL_TO_REFRESH) {
             mSwipeRefreshLayout.pull(yDelta);
         } else if (mSwipeType == OverscrollAction.HISTORY_NAVIGATION) {
+            if (!ContextUtils.getAppSharedPreferences().getBoolean("side_swipe_mode_enabled", true))
+                return;
             if (mNavigationCoordinator != null) mNavigationCoordinator.pull(xDelta, yDelta);
         }
         TraceEvent.end("SwipeRefreshHandler.pull");
@@ -233,6 +237,8 @@ public class SwipeRefreshHandler
         if (mSwipeType == OverscrollAction.PULL_TO_REFRESH) {
             mSwipeRefreshLayout.release(allowRefresh);
         } else if (mSwipeType == OverscrollAction.HISTORY_NAVIGATION) {
+            if (!ContextUtils.getAppSharedPreferences().getBoolean("side_swipe_mode_enabled", true))
+                return;
             if (mNavigationCoordinator != null) mNavigationCoordinator.release(allowRefresh);
         }
         TraceEvent.end("SwipeRefreshHandler.release");
