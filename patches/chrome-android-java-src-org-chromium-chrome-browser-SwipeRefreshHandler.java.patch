diff --git a/chrome/android/java/src/org/chromium/chrome/browser/SwipeRefreshHandler.java b/chrome/android/java/src/org/chromium/chrome/browser/SwipeRefreshHandler.java
index eab9f6a69e1a09fb66801465cf69503cbc92682f..530f2ab1adc9846f2ec9c1a11aa47274a7865823 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/SwipeRefreshHandler.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/SwipeRefreshHandler.java
@@ -42,6 +42,8 @@ import org.chromium.ui.base.WindowAndroid;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 
+import org.chromium.base.ContextUtils;
+
 /**
  * An overscroll handler implemented in terms a modified version of the Android compat library's
  * SwipeRefreshLayout effect.
@@ -293,6 +295,8 @@ public class SwipeRefreshHandler extends TabWebContentsUserData
         if (mSwipeType == OverscrollAction.PULL_TO_REFRESH) {
             mSwipeRefreshLayout.pull(yDelta);
         } else if (mSwipeType == OverscrollAction.HISTORY_NAVIGATION) {
+            if (!ContextUtils.getAppSharedPreferences().getBoolean("side_swipe_mode_enabled", true))
+                return;
             if (mNavigationCoordinator != null) mNavigationCoordinator.pull(xDelta, yDelta);
         }
         TraceEvent.end("SwipeRefreshHandler.pull");
@@ -304,6 +308,8 @@ public class SwipeRefreshHandler extends TabWebContentsUserData
         if (mSwipeType == OverscrollAction.PULL_TO_REFRESH) {
             mSwipeRefreshLayout.release(allowRefresh);
         } else if (mSwipeType == OverscrollAction.HISTORY_NAVIGATION) {
+            if (!ContextUtils.getAppSharedPreferences().getBoolean("side_swipe_mode_enabled", true))
+                return;
             if (mNavigationCoordinator != null) mNavigationCoordinator.release(allowRefresh);
         }
         TraceEvent.end("SwipeRefreshHandler.release");
