diff --git a/ios/chrome/browser/ui/toolbar/primary_toolbar_view.mm b/ios/chrome/browser/ui/toolbar/primary_toolbar_view.mm
index 104f17725edc5842819fc7b897173bdde761306b..805feec6e8776f930591e4786a42a88269c0ec7c 100644
--- a/ios/chrome/browser/ui/toolbar/primary_toolbar_view.mm
+++ b/ios/chrome/browser/ui/toolbar/primary_toolbar_view.mm
@@ -87,6 +87,9 @@ @interface PrimaryToolbarView ()
 @property(nonatomic, strong, readwrite)
     NSMutableArray<NSLayoutConstraint*>* contractedNoMarginConstraints;
 
+@property(nonatomic, strong, readwrite) ToolbarButton* misesButton;
+@property(nonatomic, strong, readwrite) ToolbarButton* walletButton;
+
 @end
 
 @implementation PrimaryToolbarView
@@ -116,6 +119,9 @@ @implementation PrimaryToolbarView
 @synthesize contractedNoMarginConstraints = _contractedNoMarginConstraints;
 @synthesize contentView = _contentView;
 
+@synthesize misesButton = _misesButton;
+@synthesize walletButton = _walletButton;
+
 #pragma mark - Public
 
 - (instancetype)initWithButtonFactory:(ToolbarButtonFactory*)factory {
@@ -218,6 +224,7 @@ - (void)setUpLocationBar {
 
 // Sets the leading stack view.
 - (void)setUpLeadingStackView {
+  self.misesButton = [self.buttonFactory misesButton];
   self.backButton = [self.buttonFactory backButton];
   self.forwardButton = [self.buttonFactory forwardButton];
   self.stopButton = [self.buttonFactory stopButton];
@@ -225,7 +232,7 @@ - (void)setUpLeadingStackView {
   self.reloadButton = [self.buttonFactory reloadButton];
 
   self.leadingStackViewButtons = @[
-    self.backButton, self.forwardButton, self.stopButton, self.reloadButton
+      self.misesButton, self.backButton, self.forwardButton, self.stopButton, self.reloadButton
   ];
   self.leadingStackView = [[UIStackView alloc]
       initWithArrangedSubviews:self.leadingStackViewButtons];
@@ -241,11 +248,12 @@ - (void)setUpLeadingStackView {
 // Sets the trailing stack view.
 - (void)setUpTrailingStackView {
   self.shareButton = [self.buttonFactory shareButton];
+  self.walletButton = [self.buttonFactory walletButton];
   self.tabGridButton = [self.buttonFactory tabGridButton];
   self.toolsMenuButton = [self.buttonFactory toolsMenuButton];
 
   self.trailingStackViewButtons =
-      @[ self.shareButton, self.tabGridButton, self.toolsMenuButton ];
+      @[ self.shareButton, self.walletButton, self.tabGridButton, self.toolsMenuButton ];
 
   self.trailingStackView = [[UIStackView alloc]
       initWithArrangedSubviews:self.trailingStackViewButtons];
@@ -431,4 +439,23 @@ - (ToolbarButton*)openNewTabButton {
   return nil;
 }
 
+
+
+- (void)updateMisesAvatar:(UIImage*)image {
+
+    if (image == nil) {
+        UIImage* icon = [[UIImage imageNamed:@"mises_user_default"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];
+        [self.misesButton setImage:icon forState:UIControlStateNormal];
+        return;
+    }
+
+    CGSize newSize = CGSizeMake(kAdaptiveToolbarIconSize, kAdaptiveToolbarIconSize);
+    UIGraphicsBeginImageContextWithOptions(newSize, NO, 0.0);
+    [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];
+    UIImage *resized_image = UIGraphicsGetImageFromCurrentImageContext();
+    UIGraphicsEndImageContext();
+    UIImage *icon = [resized_image imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];
+    [self.misesButton setImage:icon forState:UIControlStateNormal];
+}
+
 @end
