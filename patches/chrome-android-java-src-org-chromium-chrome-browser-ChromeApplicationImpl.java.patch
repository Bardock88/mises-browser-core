diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplicationImpl.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplicationImpl.java
index fca90828316dc8cd953c2d5b3f315656ed2560ec..e59d733317ca611651503635594ffd679552bde9 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplicationImpl.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplicationImpl.java
@@ -11,6 +11,7 @@ import android.os.Bundle;
 
 import androidx.annotation.Nullable;
 
+import org.chromium.base.Log;
 import org.chromium.base.ApplicationStatus;
 import org.chromium.base.library_loader.LibraryLoader;
 import org.chromium.chrome.browser.app.notifications.ContextualNotificationPermissionRequesterImpl;
@@ -35,6 +36,12 @@ import org.chromium.components.version_info.Channel;
 import org.chromium.components.version_info.VersionConstants;
 import org.chromium.url.GURL;
 
+import org.chromium.base.ContextUtils;
+import org.chromium.chrome.browser.preferences.SharedPreferencesManager;
+import org.chromium.chrome.browser.night_mode.ThemeType;
+import android.os.Build;
+
+
 /**
  * Basic application functionality that should be shared among all browser applications that use
  * chrome layer.
@@ -43,6 +50,7 @@ import org.chromium.url.GURL;
  * called from the superclass. See {@link SplitCompatApplication} for more info.
  */
 public class ChromeApplicationImpl extends SplitCompatApplication.Impl {
+    static final String TAG = "ChromeApplication";
     /** Lock on creation of sComponent. */
     private static final Object sLock = new Object();
     @Nullable
@@ -54,6 +62,13 @@ public class ChromeApplicationImpl extends SplitCompatApplication.Impl {
     public void onCreate() {
         super.onCreate();
 
+        boolean migrateToDarkTheme = ContextUtils.getAppSharedPreferences().getString("active_theme", "").equals("Diamond Black");
+        if (migrateToDarkTheme) {
+            SharedPreferencesManager.getInstance().writeIntUnchecked("previous_ui_theme_setting", ThemeType.DARK);
+            SharedPreferencesManager.getInstance().writeInt("ui_theme_setting", ThemeType.DARK);
+            SharedPreferencesManager.getInstance().writeStringUnchecked("active_theme", "");
+        }
+
         if (SplitCompatApplication.isBrowserProcess()) {
             FontPreloader.getInstance().load(getApplication());
 
