diff --git a/ui/views/widget/widget.cc b/ui/views/widget/widget.cc
index 13d32438918d07e961901e54ae9f9b8b06e7020e..15d8b085383c56f08e82d54a715b37fa30fa902d 100644
--- a/ui/views/widget/widget.cc
+++ b/ui/views/widget/widget.cc
@@ -432,12 +432,15 @@ void Widget::Init(InitParams params) {
   root_view_.reset(CreateRootView());
 
   // Copy the elements of params that will be used after it is moved.
+#if !BUILDFLAG(IS_ANDROID)
   const InitParams::Type type = params.type;
   const gfx::Rect bounds = params.bounds;
   const ui::WindowShowState show_state = params.show_state;
+#endif
   WidgetDelegate* delegate = params.delegate;
 
   native_widget_->InitNativeWidget(std::move(params));
+#if !BUILDFLAG(IS_ANDROID)
   if (type == InitParams::TYPE_MENU)
     is_mouse_button_pressed_ = native_widget_->IsMouseButtonDown();
   if (RequiresNonClientView(type)) {
@@ -481,6 +484,7 @@ void Widget::Init(InitParams params) {
   }
 
   native_theme_observation_.Observe(GetNativeTheme());
+#endif
   native_widget_initialized_ = true;
   native_widget_->OnWidgetInitDone();
 
@@ -1985,12 +1989,13 @@ void Widget::OnDragWillStart() {}
 void Widget::OnDragComplete() {}
 
 const ui::NativeTheme* Widget::GetNativeTheme() const {
+#if !BUILDFLAG(IS_ANDROID)
   if (native_theme_)
     return native_theme_;
 
   if (parent_)
     return parent_->GetNativeTheme();
-
+#endif
 #if BUILDFLAG(IS_LINUX)
   if (auto* linux_ui_theme = ui::LinuxUiTheme::GetForWindow(GetNativeWindow()))
     return linux_ui_theme->GetNativeTheme();
