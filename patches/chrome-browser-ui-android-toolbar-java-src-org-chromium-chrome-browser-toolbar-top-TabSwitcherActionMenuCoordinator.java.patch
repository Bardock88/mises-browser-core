diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/TabSwitcherActionMenuCoordinator.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/TabSwitcherActionMenuCoordinator.java
index 3bc0ffdec58d9bfb81ab00c237bf2f373e1a9c72..e09ef4867f41b4707874f77a9437031bf9032e8c 100644
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/TabSwitcherActionMenuCoordinator.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/TabSwitcherActionMenuCoordinator.java
@@ -38,6 +38,9 @@ import org.chromium.ui.widget.RectProvider;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 
+import org.chromium.base.ContextUtils;
+import android.view.View.OnClickListener;
+
 /**
  * The main coordinator for the Tab Switcher Action Menu, responsible for creating the popup menu
  * (popup window) in general and building a list of menu items.
@@ -71,15 +74,26 @@ public class TabSwitcherActionMenuCoordinator {
     public static OnLongClickListener createOnLongClickListener(
             Callback<Integer> onItemClicked,
             Profile profile,
-            ObservableSupplier<TabModelSelector> tabModelSelectorSupplier) {
+            ObservableSupplier<TabModelSelector> tabModelSelectorSupplier, OnClickListener newTabClickHandler) {
         return createOnLongClickListener(
                 new TabSwitcherActionMenuCoordinator(profile, tabModelSelectorSupplier),
-                onItemClicked);
+                onItemClicked, newTabClickHandler);
     }
 
     // internal helper function to create a long click listener.
     protected static OnLongClickListener createOnLongClickListener(
-            TabSwitcherActionMenuCoordinator menu, Callback<Integer> onItemClicked) {
+            TabSwitcherActionMenuCoordinator menu, Callback<Integer> onItemClicked, OnClickListener newTabClickHandler) {
+        if (!ContextUtils.getAppSharedPreferences().getBoolean("tabswitcher_opens_contextual_menu", false)) {
+            return new OnLongClickListener() {
+                @Override
+                public boolean onLongClick(View view) {
+                    recordUserActions(R.id.new_tab_menu_id);
+                    newTabClickHandler.onClick(view);
+                    return true;
+                }
+            };
+        }
+
         return (view) -> {
             Context context = view.getContext();
             menu.displayMenu(
