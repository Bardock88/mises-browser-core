diff --git a/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
index d336415b3ec62ec50dfe454ec962c8ca1e949c1a..977d61662a7e45784efcee72e7ff5d9a07e01d4f 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
@@ -200,6 +200,12 @@ public class MainSettings extends ChromeBaseSettingsFragment
         setManagedPreferenceDelegateForPreference(PREF_PASSWORDS);
         setManagedPreferenceDelegateForPreference(PREF_SEARCH_ENGINE);
 
+        Preference safetyCheck = findPreference(PREF_SAFETY_CHECK);
+        if (safetyCheck != null)
+            getPreferenceScreen().removePreference(safetyCheck);
+	     removePreferenceIfPresent("toolbar_options");
+	     removePreferenceIfPresent("nightmode");
+
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             // If we are on Android O+ the Notifications preference should lead to the Android
             // Settings notifications page.
@@ -210,6 +216,7 @@ public class MainSettings extends ChromeBaseSettingsFragment
             PackageManager pm = getActivity().getPackageManager();
             if (intent.resolveActivity(pm) != null) {
                 Preference notifications = findPreference(PREF_NOTIFICATIONS);
+                if (notifications != null)
                 notifications.setOnPreferenceClickListener(preference -> {
                     startActivity(intent);
                     // We handle the click so the default action isn't triggered.
@@ -234,7 +241,7 @@ public class MainSettings extends ChromeBaseSettingsFragment
         new AdaptiveToolbarStatePredictor(null).recomputeUiState(uiState -> {
             // We don't show the toolbar shortcut settings page if disabled from finch.
             if (uiState.canShowUi) return;
-            getPreferenceScreen().removePreference(findPreference(PREF_TOOLBAR_SHORTCUT));
+            removePreferenceIfPresent(PREF_TOOLBAR_SHORTCUT);
         });
 
         if (BuildInfo.getInstance().isAutomotive) {
