# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "pin_project_lite"
  epoch = "0.2"
  crate_type = "rlib"

  # Only for usage from third-party crates. Add the crate to
  # third_party.toml to use it from first-party code.
  visibility = [ "//mises/third_party/rust/*" ]
  crate_root = "crate/src/lib.rs"
  sources = [
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/src/lib.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/auxiliary/mod.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/compiletest.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/drop_order.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/default/enum.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/default/enum.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/default/struct.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/default/struct.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/multifields/enum.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/multifields/enum.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/multifields/struct.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/multifields/struct.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/enum-all.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/enum-all.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/enum-mut.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/enum-mut.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/enum-none.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/enum-none.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/enum-ref.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/enum-ref.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/struct-all.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/struct-all.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/struct-mut.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/struct-mut.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/struct-none.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/struct-none.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/struct-ref.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/naming/struct-ref.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/pinned_drop/enum.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/pinned_drop/enum.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/pinned_drop/struct.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/pinned_drop/struct.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/pub/enum.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/pub/enum.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/pub/struct.expanded.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expand/pub/struct.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/expandtest.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/include/basic.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/lint.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/proper_unpin.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/test.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/conflict-drop.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/conflict-unpin.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/invalid-bounds.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/invalid.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/overlapping_lifetime_names.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/overlapping_unpin_struct.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/packed.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/unpin_sneaky.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pin_project/unsupported.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pinned_drop/call-drop-inner.rs",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/ui/pinned_drop/conditional-drop-impl.rs",
  ]
  inputs = [
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/CHANGELOG.md",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/README.md",
    "//mises/third_party/rust/pin_project_lite/v0_2/crate/tests/README.md",
  ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "0.2.9"
  cargo_pkg_name = "pin-project-lite"
  cargo_pkg_description =
      "A lightweight version of pin-project written with declarative macros."
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
}
