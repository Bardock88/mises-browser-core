# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "num_bigint"
  epoch = "0.3"
  crate_type = "rlib"

  # Only for usage from third-party crates. Add the crate to
  # third_party.toml to use it from first-party code.
  visibility = [ "//mises/third_party/rust/*" ]
  crate_root = "crate/src/lib.rs"
  sources = [
    "//mises/third_party/rust/num_bigint/v0_3/crate/benches/bigint.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/benches/factorial.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/benches/gcd.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/benches/roots.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/benches/shootout-pidigits.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/build.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/addition.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/arbitrary.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/bits.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/convert.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/division.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/multiplication.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/power.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/serde.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/shift.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigint/subtraction.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/bigrand.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/addition.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/arbitrary.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/bits.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/convert.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/division.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/iter.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/monty.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/multiplication.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/power.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/serde.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/shift.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/biguint/subtraction.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/lib.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/src/macros.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/bigint.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/bigint_bitwise.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/bigint_scalar.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/biguint.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/biguint_scalar.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/consts/mod.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/macros/mod.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/modpow.rs",
    "//mises/third_party/rust/num_bigint/v0_3/crate/tests/roots.rs",
  ]
  inputs = [
    "//mises/third_party/rust/num_bigint/v0_3/crate/README.md",
    "//mises/third_party/rust/num_bigint/v0_3/crate/RELEASES.md",
  ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "0.3.3"
  cargo_pkg_authors = "The Rust Project Developers"
  cargo_pkg_name = "num-bigint"
  cargo_pkg_description = "Big integer implementation for Rust"
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    "//mises/third_party/rust/num_integer/v0_1:lib",
    "//mises/third_party/rust/num_traits/v0_2:lib",
  ]
  build_deps = [ "//mises/third_party/rust/autocfg/v1:buildrs_support" ]
  features = [ "std" ]
  build_root = "crate/build.rs"
  build_sources = [ "crate/build.rs" ]
  build_script_outputs = [ "radix_bases.rs" ]
  rustflags = [
    "--cfg",
    "has_try_from",
  ]
  if (current_cpu == "arm64" || current_cpu == "x64") {
    rustflags += [
      "--cfg",
      "u64_digit",
    ]
  }
}
